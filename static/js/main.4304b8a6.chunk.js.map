{"version":3,"sources":["api.ts","routes/atoms.ts","routes/Coins.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Goback.tsx","routes/Coin.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BAS_URL","fetchCoins","fetch","then","reponse","json","priceFetch","coinId","a","isDarkAtom","atom","key","default","Container","styled","div","Header","header","Coinlist","ul","Coin","li","props","theme","cardbgColor","textColor","accentColor","Title","Loading","Benner","img","ToggleBtn","button","Coins","useQuery","isLoading","data","isDark","useSetRecoilState","Helmet","onClick","prev","slice","map","coins","to","id","state","name","src","symbol","toLowerCase","Chart","endDate","Math","floor","Date","now","startDate","response","fetchCoinHistoty","refetchInterval","useRecoilValue","type","series","price","x","time_close","y","open","toFixed","high","low","close","options","mode","yaxis","show","xaxis","categories","chart","height","toolbar","background","comeupAnimation","keyframes","InfoBar","Text","h3","isPositive","Check","value","Price","console","log","quotes","USD","percent_change_1h","percent_change_24h","percent_change_7d","percent_change_30d","ath_date","ath_price","Gobackbtn","Goback","navigate","useNavigate","h1","Overview","OverviewItem","Description","p","Tabs","Tab","span","isActive","Homebtn","ModeToggle","useParams","useLocation","priceMatch","useMatch","chartMatch","infoFetch","infoloading","info","priceloading","infoprice","loading","rank","description","total_supply","max_supply","path","element","Router","basename","process","darktheme","bgColor","lighttheme","GlobalStlye","createGlobalStyle","App","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","document","getElementById"],"mappings":"+PAAMA,EAAO,iCAEN,SAASC,IACd,OAAOC,MAAM,GAAD,OAAIF,EAAJ,WAAqBG,MAAK,SAACC,GAAD,OAAaA,EAAQC,UAEtD,SAAeC,EAAtB,kC,4CAAO,WAA0BC,GAA1B,SAAAC,EAAA,sEACeN,MAAM,GAAD,OAAIF,EAAJ,oBAAuBO,IAD3C,8BACsDF,OADtD,oF,sBCHA,I,gBAAMI,EAAaC,YAAK,CAC7BC,IAAK,SACLC,SAAS,I,OCKLC,EAAYC,IAAOC,IAAV,wFAKTC,EAASF,IAAOG,OAAV,0IAONC,EAAWJ,IAAOK,GAAV,0BACRC,EAAON,IAAOO,GAAV,6RACY,SAACC,GAAD,OAAWA,EAAMC,MAAMC,eAClC,SAACF,GAAD,OAAWA,EAAMC,MAAME,aAWnB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,eAKhCC,EAAQb,IAAOC,IAAV,+DAEA,SAACO,GAAD,OAAWA,EAAMC,MAAMG,eAE5BE,EAAUd,IAAOC,IAAV,sEAIPc,EAASf,IAAOgB,IAAV,oFAKNC,EAAYjB,IAAOkB,OAAV,wPAIO,SAACV,GAAD,OAAWA,EAAMC,MAAMC,eAClC,SAACF,GAAD,OAAWA,EAAMC,MAAME,aAMrB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,eAyDrBO,MA5Cf,WACE,MAA4BC,mBAA0B,WAAYjC,GAA1DkC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KACbC,EAASC,YAAkB7B,GAcjC,OACE,eAACI,EAAD,WACE,cAAC0B,EAAA,EAAD,UACE,mDAEF,eAACvB,EAAD,WACE,cAACe,EAAD,CAAWS,QAnBC,kBAAMH,GAAO,SAACI,GAAD,OAAWA,MAmBpC,kBACA,cAACd,EAAD,8BAEDQ,EACC,cAACP,EAAD,yBAEA,cAACV,EAAD,iBACGkB,QADH,IACGA,OADH,EACGA,EAAMM,MAAM,EAAG,KAAKC,KAAI,SAACC,GAAD,OACvB,cAACxB,EAAD,UACE,eAAC,IAAD,CAAMyB,GAAE,WAAMD,EAAME,IAAMC,MAAO,CAAEC,KAAMJ,EAAMI,MAA/C,UACE,cAACnB,EAAD,CACEoB,IAAG,qDAAgDL,EAAMM,OAAOC,iBAEjEP,EAAMI,KAJT,cADSJ,EAAME,a,iBCTdM,I,QAAAA,EAhFf,YAAwC,IAAvB7C,EAAsB,EAAtBA,OACf,EAA4B2B,mBAC1B,CAAC,QAAS3B,IACV,kBHRG,SAA0BA,GAC/B,IAAM8C,EAAUC,KAAKC,MAAMC,KAAKC,MAAQ,KAClCC,EAAYL,EAAU,QAC5B,OAAOnD,MAAM,GAAD,OACPF,EADO,kBACUO,EADV,mCAC2CmD,EAD3C,gBAC4DL,IACtElD,MAAK,SAACwD,GAAD,OAAcA,EAAStD,UGGtBuD,CAAiBrD,KACvB,CAAEsD,gBAAiB,MAHb1B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAKbC,EAASyB,YAAerD,GAC9B,OACE,8BACG0B,EACC,aAEA,cAAC,IAAD,CACE4B,KAAK,cACLC,OAAQ,CACN,CACEhB,KAAM,SACNZ,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMO,KAAI,SAACsB,GAAD,MAAY,CAC1BC,EAAGD,EAAME,WAAWzB,MAAM,EAAG,IAC7B0B,EAAG,CACDH,EAAMI,KAAKC,QAAQ,GACnBL,EAAMM,KAAKD,QAAQ,GACnBL,EAAMO,IAAIF,QAAQ,GAClBL,EAAMQ,MAAMH,QAAQ,UAK5BI,QAAS,CACPnD,MAAO,CAAEoD,KAAMtC,EAAS,OAAS,SACjCuC,MAAO,CAAEC,MAAM,GACfC,MAAO,CACLf,KAAM,WACNgB,WAAU,OAAE3C,QAAF,IAAEA,OAAF,EAAEA,EAAMO,KAAI,SAACsB,GAAD,OAAWA,EAAME,eAEzCa,MAAO,CACLjB,KAAM,cACNkB,OAAQ,IACRC,QAAS,CAAEL,MAAM,GACjBM,WAAY,qBCrDpBtE,EAAYC,IAAOC,IAAV,gcAyBTqE,EAAkBC,YAAH,sMAcfC,EAAUxE,IAAOC,IAAV,uPAQEqE,GAETG,EAAOzE,IAAO0E,GAAV,oFAGC,SAAClE,GAAD,OAAYA,EAAMmE,WAAa,aAAe,SAkBzD,SAASC,EAAMC,GACb,GAAIA,EACF,OAAOA,EAAQ,EAsEJC,I,EAAAA,EAnEf,YAAwC,IAAvBrF,EAAsB,EAAtBA,OACf,EAA4B2B,mBAAiB,CAAC,QAAS3B,IAAS,kBAC9DD,EAAWC,MADL4B,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,KAKnB,OADAyD,QAAQC,IAAI1D,GAEV,8BACGD,EACC,YAEA,eAAC,EAAD,WACE,eAACmD,EAAD,8BACmB,IACjB,eAACC,EAAD,CAAME,YAA8C,IAAlCC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAI/B,OAAzC,qBACI7B,QADJ,IACIA,OADJ,EACIA,EAAM2D,OAAOC,IAAI/B,MAAMK,QAAQ,SAGrC,eAACgB,EAAD,oCACyB,IACvB,eAACC,EAAD,CACEE,YAA0D,IAA9CC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAIC,mBADrC,iBAGG7D,QAHH,IAGGA,OAHH,EAGGA,EAAM2D,OAAOC,IAAIC,kBAHpB,UAMF,eAACX,EAAD,qCAC0B,IACxB,eAACC,EAAD,CACEE,YAA2D,IAA/CC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAIE,oBADrC,iBAGG9D,QAHH,IAGGA,OAHH,EAGGA,EAAM2D,OAAOC,IAAIE,mBAHpB,UAMF,eAACZ,EAAD,oCACyB,IACvB,eAACC,EAAD,CACEE,YAA0D,IAA9CC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAIG,mBADrC,iBAGG/D,QAHH,IAGGA,OAHH,EAGGA,EAAM2D,OAAOC,IAAIG,kBAHpB,UAMF,eAACb,EAAD,qCAC0B,IACxB,eAACC,EAAD,CACEE,YAA2D,IAA/CC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAII,oBADrC,iBAGGhE,QAHH,IAGGA,OAHH,EAGGA,EAAM2D,OAAOC,IAAII,mBAHpB,UAMF,eAACd,EAAD,4BACiB,IACf,cAACC,EAAD,CAAME,YAAY,EAAlB,gBACGrD,QADH,IACGA,OADH,EACGA,EAAM2D,OAAOC,IAAIK,SAAS3D,MAAM,EAAG,SAGxC,eAAC4C,EAAD,2BACgB,IACd,eAACC,EAAD,CAAME,YAAkD,IAAtCC,EAAK,OAACtD,QAAD,IAACA,OAAD,EAACA,EAAM2D,OAAOC,IAAIM,WAAzC,qBACIlE,QADJ,IACIA,OADJ,EACIA,EAAM2D,OAAOC,IAAIM,UAAUhC,QAAQ,eCvI7CiC,GAAYzF,IAAOkB,OAAV,2QAKJ,SAACV,GAAD,OAAWA,EAAMC,MAAME,aAQrB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,eAQrB8E,I,iCAAAA,GAJf,WACE,IAAMC,EAAWC,cACjB,OAAO,cAACH,GAAD,CAAW/D,QAAS,kBAAMiE,GAAU,IAApC,mBCVH5F,GAAYC,IAAOC,IAAV,0FAKTC,GAASF,IAAOG,OAAV,4IAONU,GAAQb,IAAO6F,GAAV,iEAEA,SAACrF,GAAD,OAAWA,EAAMC,MAAMG,eAE5BE,GAAUd,IAAOC,IAAV,wEAIP6F,GAAW9F,IAAOC,IAAV,2KAOR8F,GAAe/F,IAAOC,IAAV,oOAWZ+F,GAAchG,IAAOiG,EAAV,mDAGXC,GAAOlG,IAAOC,IAAV,6HAOJkG,GAAMnG,IAAOoG,KAAV,kQAQE,SAAC5F,GAAD,OACPA,EAAM6F,SAAW7F,EAAMC,MAAMG,YAAcJ,EAAMC,MAAME,aAKrD2F,GAAUtG,IAAOkB,OAAV,4QAKF,SAACV,GAAD,OAAWA,EAAMC,MAAME,aAMrB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,eAI9B2F,GAAavG,IAAOkB,OAAV,0QAKL,SAACV,GAAD,OAAWA,EAAMC,MAAME,aAMrB,SAACH,GAAD,OAAWA,EAAMC,MAAMG,eAoKrBN,OAnGf,WAEE,IAAMiB,EAASC,YAAkB7B,GACzBF,EAAW+G,cAAX/G,OACAwC,EAAUwE,cAAVxE,MACFyE,EAAaC,YAAS,kBACtBC,EAAaD,YAAS,kBAC5B,EAA+CvF,mBAC7C,CAAC,OAAQ3B,IACT,kBNtKG,SAAmBA,GACxB,OAAOL,MAAM,GAAD,OAAIF,EAAJ,kBAAqBO,IAAUJ,MAAK,SAACwD,GAAD,OAC9CA,EAAStD,UMoKHsH,CAAUpH,MAFCqH,EAAnB,EAAQzF,UAA8B0F,EAAtC,EAAgCzF,KAIhC,EAAqDF,mBACnD,CAAC,QAAS3B,IACV,kBAAMD,EAAWC,KACjB,CAAEsD,gBAAiB,MAHFiE,EAAnB,EAAQ3F,UAA+B4F,EAAvC,EAAiC3F,KAuB3B4F,EAAUJ,GAAeE,EAC/B,OACE,eAAC,GAAD,WACE,cAACvF,EAAA,EAAD,UACE,iCACQ,OAALQ,QAAK,IAALA,OAAA,EAAAA,EAAOC,MAAOD,EAAMC,KAAOgF,EAAU,UAAH,OAAeH,QAAf,IAAeA,OAAf,EAAeA,EAAM7E,SAG5D,eAAC,GAAD,WACE,cAAC,GAAD,IACA,cAACoE,GAAD,UACE,cAAC,IAAD,CAAMvE,GAAG,IAAT,oBAEF,cAAC,GAAD,WACQ,OAALE,QAAK,IAALA,OAAA,EAAAA,EAAOC,MAAOD,EAAMC,KAAOgF,EAAU,UAAH,OAAeH,QAAf,IAAeA,OAAf,EAAeA,EAAM7E,OAE1D,cAACqE,GAAD,CAAY7E,QAlCA,kBAAMH,GAAO,SAACI,GAAD,OAAWA,MAkCpC,qBAEDuF,EACC,cAAC,GAAD,yBAEA,qCACE,eAACpB,GAAD,WACE,eAACC,GAAD,WACE,yCACA,sCAAOgB,QAAP,IAAOA,OAAP,EAAOA,EAAMI,UAEf,eAACpB,GAAD,WACE,2CACA,4CAAQgB,QAAR,IAAQA,OAAR,EAAQA,EAAM3E,aAEhB,eAAC2D,GAAD,WACE,0CACA,4CAAQkB,QAAR,IAAQA,OAAR,EAAQA,EAAWhC,OAAOC,IAAI/B,MAAMK,QAAQ,YAGhD,cAACwC,GAAD,iBAAce,QAAd,IAAcA,OAAd,EAAcA,EAAMK,cACpB,eAACtB,GAAD,WACE,eAACC,GAAD,WACE,gDACA,sCAAOkB,QAAP,IAAOA,OAAP,EAAOA,EAAWI,kBAEpB,eAACtB,GAAD,WACE,+CACA,sCAAOkB,QAAP,IAAOA,OAAP,EAAOA,EAAWK,sBAK1B,eAACpB,GAAD,WACE,cAACC,GAAD,CAAKE,SAAyB,OAAfO,EAAf,SACE,cAAC,IAAD,CAAM7E,GAAE,WAAMtC,EAAN,UAAR,qBAEF,cAAC0G,GAAD,CAAKE,SAAyB,OAAfK,EAAf,SACE,cAAC,IAAD,CAAM3E,GAAE,WAAMtC,EAAN,UAAR,wBAGJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAO8H,KAAI,QAAWC,QAAS,cAAC,EAAD,CAAO/H,OAAQA,MAC9C,cAAC,IAAD,CAAO8H,KAAI,QAAWC,QAAS,cAAC,EAAD,CAAO/H,OAAQA,aCpPvCgI,I,GAAAA,GAVf,WACE,OACE,cAAC,IAAD,CAAeC,SAAUC,yBAAzB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOJ,KAAK,aAAaC,QAAS,cAAC,GAAD,MAClC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,EAAD,Y,SCPpBI,GAA0B,CACrCC,QAAS,UACTlH,UAAW,QACXC,YAAa,UACbF,YAAa,sBAEFoH,GAA2B,CACtCD,QAAS,aACTlH,UAAW,QACXC,YAAa,UACbF,YAAa,SCHTqH,GAAcC,YAAH,89CAuDK,SAACxH,GAAD,OAAWA,EAAMC,MAAMoH,WACnC,SAACrH,GAAD,OAAWA,EAAMC,MAAME,aAsBlBsH,OAbf,WACE,IAAM1G,EAASyB,YAAerD,GAC9B,OACE,mCACE,eAAC,IAAD,CAAec,MAAOc,EAASqG,GAAYE,GAA3C,UACE,cAACC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,sBAAD,CAAoBG,eAAe,UC1ErCC,GAAc,IAAIC,cACxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBC,OAAQL,GAA7B,SACE,cAAC,GAAD,UAINM,SAASC,eAAe,W","file":"static/js/main.4304b8a6.chunk.js","sourcesContent":["const BAS_URL = `https://api.coinpaprika.com/v1`;\n\nexport function fetchCoins() {\n  return fetch(`${BAS_URL}/coins`).then((reponse) => reponse.json());\n}\nexport async function priceFetch(coinId: string) {\n  return await (await fetch(`${BAS_URL}/tickers/${coinId}`)).json();\n}\nexport function infoFetch(coinId: string) {\n  return fetch(`${BAS_URL}/coins/${coinId}`).then((response) =>\n    response.json()\n  );\n}\nexport function fetchCoinHistoty(coinId: string) {\n  const endDate = Math.floor(Date.now() / 1000);\n  const startDate = endDate - 60 * 60 * 24 * 7 * 2;\n  return fetch(\n    `${BAS_URL}/coins/${coinId}/ohlcv/historical?start=${startDate}&end=${endDate}`\n  ).then((response) => response.json());\n}\n","import { atom } from \"recoil\";\n\nexport const isDarkAtom = atom({\n  key: \"isDark\",\n  default: true,\n});\n","import { useEffect, useState } from \"react\";\nimport { Helmet } from \"react-helmet\";\nimport { useQuery } from \"react-query\";\nimport { Link } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { fetchCoins } from \"../api\";\nimport { isDarkAtom } from \"./atoms\";\n\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 10vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\nconst Coinlist = styled.ul``;\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.cardbgColor};\n  color: ${(props) => props.theme.textColor};\n  margin-bottom: 10px;\n  border-radius: 15px;\n  a {\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n    padding: 20px;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loading = styled.div`\n  text-align: center;\n  display: block;\n`;\nconst Benner = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\nconst ToggleBtn = styled.button`\n  position: absolute;\n  left: 0;\n  border-radius: 10px;\n  background-color: ${(props) => props.theme.cardbgColor};\n  color: ${(props) => props.theme.textColor};\n  border: none;\n  width: 45px;\n  height: 30px;\n  transition: color 0.2s ease-in;\n  &:hover {\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\nfunction Coins() {\n  const { isLoading, data } = useQuery<CoinInterface[]>(\"allcoins\", fetchCoins);\n  const isDark = useSetRecoilState(isDarkAtom);\n  const setToggle = () => isDark((prev) => !prev);\n  // const [coins, setCoins] = useState<CoinInterface[]>([]);\n  // const [loading, setLoading] = useState(true);\n  // useEffect(() => {\n  //   (async () => {\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\n  //     const json = await response.json();\n  //     setCoins(json.slice(0, 100));\n  //     setLoading(false);\n  //     console.log(coins);\n  //   })();\n  // }, []);\n\n  return (\n    <Container>\n      <Helmet>\n        <title>코인</title>\n      </Helmet>\n      <Header>\n        <ToggleBtn onClick={setToggle}>mode</ToggleBtn>\n        <Title>코인</Title>\n      </Header>\n      {isLoading ? (\n        <Loading>loading...</Loading>\n      ) : (\n        <Coinlist>\n          {data?.slice(0, 100).map((coins) => (\n            <Coin key={coins.id}>\n              <Link to={`/${coins.id}`} state={{ name: coins.name }}>\n                <Benner\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coins.symbol.toLowerCase()}`}\n                />\n                {coins.name} &rarr;\n              </Link>\n            </Coin>\n          ))}\n        </Coinlist>\n      )}\n    </Container>\n  );\n}\nexport default Coins;\n","import { useQuery } from \"react-query\";\nimport { fetchCoinHistoty } from \"../api\";\nimport ApexChart from \"react-apexcharts\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\ninterface Chartprops {\n  coinId: string;\n}\ninterface IHistorycal {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\nfunction Chart({ coinId }: Chartprops) {\n  const { isLoading, data } = useQuery<IHistorycal[]>(\n    [\"ohlcv\", coinId],\n    () => fetchCoinHistoty(coinId),\n    { refetchInterval: 100000 }\n  );\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <div>\n      {isLoading ? (\n        \"loading...\"\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              name: \"candle\",\n              data: data?.map((price) => ({\n                x: price.time_close.slice(8, 10),\n                y: [\n                  price.open.toFixed(2),\n                  price.high.toFixed(2),\n                  price.low.toFixed(2),\n                  price.close.toFixed(2),\n                ],\n              })),\n            },\n          ]}\n          options={{\n            theme: { mode: isDark ? \"dark\" : \"light\" },\n            yaxis: { show: false },\n            xaxis: {\n              type: \"category\",\n              categories: data?.map((price) => price.time_close),\n            },\n            chart: {\n              type: \"candlestick\",\n              height: 350,\n              toolbar: { show: false },\n              background: \"transparent\",\n            },\n          }}\n          // type=\"line\"\n          // series={[\n          //   {\n          //     name: \"sales\",\n          //     data: data?.map((price) => price.close),\n          //   },\n          // ]}\n          // options={{\n          //   xaxis: {\n          //     type: \"datetime\",\n          //     categories: data?.map((price) => price.time_close),\n          //   },\n          //   yaxis: { show: false },\n          //   theme: { mode: \"dark\" },\n          // chart: {\n          //   height: 500,\n          //   width: 500,\n          //   toolbar: { show: false },\n          //   background: \"transparent\",\n          // },\n          //   grid: { show: false },\n          //   stroke: { curve: \"smooth\", width: 3 },\n          //   fill: {\n          //     type: \"gradient\",\n          //     gradient: { gradientToColors: [\"blue\"], stops: [0, 100] },\n          //   },\n          //   colors: [\"red\"],\n          //   tooltip: {\n          //     y: {\n          //       formatter: (value) => `$${value.toFixed(2)}`,\n          //     },\n          //   },\n          // }}\n        />\n      )}\n    </div>\n  );\n}\nexport default Chart;\n","import { useQuery } from \"react-query\";\nimport styled, { keyframes } from \"styled-components\";\nimport { priceFetch } from \"../api\";\n\nconst Container = styled.div`\n  max-width: 480px;\n  margin: 0 auto;\n  div:first-child {\n    animation-delay: 0.2s;\n  }\n  div:nth-child(2) {\n    animation-delay: 0.4s;\n  }\n  div:nth-child(3) {\n    animation-delay: 0.6s;\n  }\n  div:nth-child(4) {\n    animation-delay: 0.8s;\n  }\n  div:nth-child(5) {\n    animation-delay: 1s;\n  }\n  div:nth-child(6) {\n    animation-delay: 1.2s;\n  }\n  div:last-child {\n    animation-delay: 1.4s;\n  }\n`;\nconst comeupAnimation = keyframes`\n  0% {\n    transform: none;\n    opacity: 0;\n  }\n  1% {\n    transform: translateY(-5px);\n    opacity: 0;\n  }\n  100% {\n    transform: none;\n    opacity: 1;\n  }\n`;\nconst InfoBar = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n  margin-bottom: 20px;\n  opacity: 0;\n  animation: ${comeupAnimation} 0.5s linear forwards;\n`;\nconst Text = styled.h3<{ isPositive?: Boolean }>`\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => (props.isPositive ? \"lightgreen\" : \"red\")};\n`;\ninterface Chartprops {\n  coinId: string;\n}\ninterface Iprice {\n  quotes: {\n    USD: {\n      price: number;\n      percent_change_1h: number;\n      percent_change_24h: number;\n      percent_change_7d: number;\n      percent_change_30d: number;\n      ath_date: string;\n      ath_price: number;\n    };\n  };\n}\nfunction Check(value: number | undefined) {\n  if (value) {\n    return value > 0;\n  }\n}\nfunction Price({ coinId }: Chartprops) {\n  const { isLoading, data } = useQuery<Iprice>([\"ohicv\", coinId], () =>\n    priceFetch(coinId)\n  );\n\n  console.log(data);\n  return (\n    <div>\n      {isLoading ? (\n        \"loading..\"\n      ) : (\n        <Container>\n          <InfoBar>\n            Current Prices :{\" \"}\n            <Text isPositive={Check(data?.quotes.USD.price) === true}>\n              ${data?.quotes.USD.price.toFixed(2)}\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Change rate (last:1h):{\" \"}\n            <Text\n              isPositive={Check(data?.quotes.USD.percent_change_1h) === true}\n            >\n              {data?.quotes.USD.percent_change_1h}%\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Change rate (last:24h):{\" \"}\n            <Text\n              isPositive={Check(data?.quotes.USD.percent_change_24h) === true}\n            >\n              {data?.quotes.USD.percent_change_24h}%\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Change rate (last:7d):{\" \"}\n            <Text\n              isPositive={Check(data?.quotes.USD.percent_change_7d) === true}\n            >\n              {data?.quotes.USD.percent_change_7d}%\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Change rate (last:30d):{\" \"}\n            <Text\n              isPositive={Check(data?.quotes.USD.percent_change_30d) === true}\n            >\n              {data?.quotes.USD.percent_change_30d}%\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Highest Price:{\" \"}\n            <Text isPositive={true}>\n              {data?.quotes.USD.ath_date.slice(0, 10)}\n            </Text>\n          </InfoBar>\n          <InfoBar>\n            Highest Date:{\" \"}\n            <Text isPositive={Check(data?.quotes.USD.ath_price) === true}>\n              ${data?.quotes.USD.ath_price.toFixed(2)}\n            </Text>\n          </InfoBar>\n        </Container>\n      )}\n    </div>\n  );\n}\nexport default Price;\n","import { Link, useNavigate } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Gobackbtn = styled.button`\n  position: absolute;\n  left: 0;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${(props) => props.theme.textColor};\n  border: none;\n  width: 45px;\n  height: 30px;\n\n  transition: color 0.2s ease-in;\n\n  &:hover {\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\nfunction Goback() {\n  const navigate = useNavigate();\n  return <Gobackbtn onClick={() => navigate(-1)}>back</Gobackbtn>;\n}\nexport default Goback;\n","import { useEffect, useState } from \"react\";\nimport { Routes, Route, useLocation, useParams, useMatch } from \"react-router\";\nimport styled from \"styled-components\";\nimport Chart from \"./Chart\";\nimport Price from \"./Price\";\nimport { Link } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { priceFetch, infoFetch } from \"../api\";\nimport Helmet from \"react-helmet\";\nimport Goback from \"./Goback\";\nimport { useRecoilValue, useSetRecoilState } from \"recoil\";\nimport { isDarkAtom } from \"./atoms\";\nconst Container = styled.div`\n  padding: 0 20px;\n  max-width: 480px;\n  margin: 0 auto;\n`;\nconst Header = styled.header`\n  height: 15vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  position: relative;\n`;\nconst Title = styled.h1`\n  font-size: 48px;\n  color: ${(props) => props.theme.accentColor};\n`;\nconst Loading = styled.div`\n  text-align: center;\n  display: block;\n`;\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isActive: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: rgba(0, 0, 0, 0.5);\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) =>\n    props.isActive ? props.theme.accentColor : props.theme.textColor};\n  a {\n    display: block;\n  }\n`;\nconst Homebtn = styled.button`\n  position: absolute;\n  left: 50px;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${(props) => props.theme.textColor};\n  border: none;\n  width: 45px;\n  height: 30px;\n  transition: color 0.2s ease-in;\n  &:hover {\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\nconst ModeToggle = styled.button`\n  position: absolute;\n  right: 0;\n  border-radius: 10px;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: ${(props) => props.theme.textColor};\n  border: none;\n  width: 45px;\n  height: 30px;\n  transition: color 0.2s ease-in;\n  &:hover {\n    color: ${(props) => props.theme.accentColor};\n  }\n`;\n\ninterface IInfo {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  links: object;\n  links_extended: object;\n  whitepaper: object;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface IInfoprice {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: {\n      ath_date: string;\n      ath_price: number;\n      market_cap: number;\n      market_cap_change_24h: number;\n      percent_change_1h: number;\n      percent_change_1y: number;\n      percent_change_6h: number;\n      percent_change_7d: number;\n      percent_change_12h: number;\n      percent_change_15m: number;\n      percent_change_24h: number;\n      percent_change_30d: number;\n      percent_change_30m: number;\n      percent_from_price_ath: number;\n      price: number;\n      volume_24h: number;\n      volume_24h_change_24h: number;\n    };\n  };\n}\ninterface RouteParams {\n  coinId: string;\n}\n\nfunction Coin() {\n  // const [loading, setLoading] = useState(true);\n  const isDark = useSetRecoilState(isDarkAtom);\n  const { coinId } = useParams() as unknown as RouteParams;\n  const { state } = useLocation();\n  const priceMatch = useMatch(\"/:coinId/price\");\n  const chartMatch = useMatch(\"/:coinId/chart\");\n  const { isLoading: infoloading, data: info } = useQuery<IInfo>(\n    [\"info\", coinId],\n    () => infoFetch(coinId)\n  );\n  const { isLoading: priceloading, data: infoprice } = useQuery<IInfoprice>(\n    [\"price\", coinId],\n    () => priceFetch(coinId),\n    { refetchInterval: 5000 }\n  );\n  const setToggle = () => isDark((prev) => !prev);\n  // const [info, setInfo] = useState<IInfo>();\n  // const [infoprice, setInfoprice] = useState<IInfoprice>();\n  // console.log(chartMatch);\n  // console.log(priceMatch);\n  // useEffect(() => {\n  //   (async () => {\n  //     const infodata = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/coins/${coinId}`)\n  //     ).json();\n  //     const priceData = await (\n  //       await fetch(`https://api.coinpaprika.com/v1/tickers/${coinId}`)\n  //     ).json();\n  //     setInfo(infodata);\n  //     setInfoprice(priceData);\n  //     setLoading(false);\n  //   })();\n  // }, []);\n  const loading = infoloading || priceloading;\n  return (\n    <Container>\n      <Helmet>\n        <title>\n          {state?.name ? state.name : loading ? \"loading\" : info?.name}\n        </title>\n      </Helmet>\n      <Header>\n        <Goback />\n        <Homebtn>\n          <Link to=\"/\">home</Link>\n        </Homebtn>\n        <Title>\n          {state?.name ? state.name : loading ? \"loading\" : info?.name}\n        </Title>\n        <ModeToggle onClick={setToggle}>mode</ModeToggle>\n      </Header>\n      {loading ? (\n        <Loading>Loading...</Loading>\n      ) : (\n        <>\n          <Overview>\n            <OverviewItem>\n              <span>Rank:</span>\n              <span>{info?.rank}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Symbol:</span>\n              <span>${info?.symbol}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Price:</span>\n              <span>${infoprice?.quotes.USD.price.toFixed(2)}</span>\n            </OverviewItem>\n          </Overview>\n          <Description>{info?.description}</Description>\n          <Overview>\n            <OverviewItem>\n              <span>Total Suply:</span>\n              <span>{infoprice?.total_supply}</span>\n            </OverviewItem>\n            <OverviewItem>\n              <span>Max Supply:</span>\n              <span>{infoprice?.max_supply}</span>\n            </OverviewItem>\n          </Overview>\n        </>\n      )}\n      <Tabs>\n        <Tab isActive={chartMatch !== null}>\n          <Link to={`/${coinId}/chart`}>Chart</Link>\n        </Tab>\n        <Tab isActive={priceMatch !== null}>\n          <Link to={`/${coinId}/price`}>Price</Link>\n        </Tab>\n      </Tabs>\n      <Routes>\n        <Route path={`price`} element={<Price coinId={coinId} />} />\n        <Route path={`chart`} element={<Chart coinId={coinId} />} />\n      </Routes>\n    </Container>\n  );\n}\n\nexport default Coin;\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Coins from \"./routes/Coins\";\nimport Coin from \"./routes/Coin\";\n\nfunction Router() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Routes>\n        <Route path=\"/:coinId/*\" element={<Coin />}></Route>\n        <Route path=\"/\" element={<Coins />}></Route>\n      </Routes>\n    </BrowserRouter>\n  );\n}\nexport default Router;\n","import { DefaultTheme } from \"styled-components\";\n\nexport const darktheme: DefaultTheme = {\n  bgColor: \"#2f3640\",\n  textColor: \"white\",\n  accentColor: \"#8c7ae6\",\n  cardbgColor: \"rgba(0, 0, 0, 0.5)\",\n};\nexport const lighttheme: DefaultTheme = {\n  bgColor: \"whitesmoke\",\n  textColor: \"black\",\n  accentColor: \"#9c88ff\",\n  cardbgColor: \"white\",\n};\n","import React, { useState } from \"react\";\nimport styled, { createGlobalStyle, keyframes } from \"styled-components\";\nimport Router from \"./Router\";\nimport { ReactQueryDevtools } from \"react-query/devtools\";\nimport { ThemeProvider } from \"styled-components\";\nimport { darktheme, lighttheme } from \"./theme\";\nimport { useRecoilValue } from \"recoil\";\nimport { isDarkAtom } from \"./routes/atoms\";\n\nconst GlobalStlye = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro&display=swap');\n html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody{\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.textColor};\n  line-height: 1.2;\n}\na {\n  text-decoration: none;\n  color:inherit;\n}\n`;\n\nfunction App() {\n  const isDark = useRecoilValue(isDarkAtom);\n  return (\n    <>\n      <ThemeProvider theme={isDark ? darktheme : lighttheme}>\n        <GlobalStlye />\n        <Router />\n        <ReactQueryDevtools initialIsOpen={true} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { RecoilRoot } from \"recoil\";\n\nconst queryClient = new QueryClient();\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={queryClient}>\n        <App />\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}